service: ddns-ping-poc

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    SERVERLESS_STAGE: ${self:provider.stage}
    SERVERLESS_PROJECT: ${self:service}
    SERVERLESS_REGION: ${self:provider.region}
    RECORDS_TABLE_NAME: records-table-${self:provider.environment.SERVERLESS_STAGE}
    HOSTED_ZONE_NAME: ${env:HOSTED_ZONE_NAME}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - Fn::Join:
          - ""
          - - "arn:aws:dynamodb:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":table/${self:provider.environment.RECORDS_TABLE_NAME}"
        - Fn::Join:
          - ""
          - - "arn:aws:dynamodb:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":table/${self:provider.environment.RECORDS_TABLE_NAME}/*"

plugins:
  - serverless-plugin-custom-roles

functions:
  ping:
    handler: src/handlers/ping/index.handler
    events:
      - http:
          path: "/{token}"
          method: get
  record:
    handler: src/handlers/record/index.handler
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - RecordsTable
              - StreamArn
          batchSize: 1
resources:
  Resources:
    DDNSHostedZone:
      Type: AWS::Route53::HostedZone
      Properties:
        HostedZoneConfig:
          Comment: Hosted zone for ddns service
        Name: ${self:provider.environment.HOSTED_ZONE_NAME}
    RecordsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
          - AttributeName: user
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: user
            KeySchema:
              - AttributeName: user
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: expires
          Enabled: true
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        TableName: ${self:provider.environment.RECORDS_TABLE_NAME}
